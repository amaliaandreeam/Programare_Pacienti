// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Programare_Pacienti.Data;

namespace Programare_Pacienti.Migrations
{
    [DbContext(typeof(Programare_PacientiContext))]
    [Migration("20220104231305_PatientCategory")]
    partial class PatientCategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Programare_Pacienti.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryAge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.Consultation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConsultationReview")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Consultation");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.Patient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ConsultationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ConsultationID")
                        .HasColumnType("int");

                    b.Property<string>("Doctor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ID");

                    b.HasIndex("ConsultationID");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.PatientCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("PatientID");

                    b.ToTable("PatientCategory");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.Patient", b =>
                {
                    b.HasOne("Programare_Pacienti.Models.Consultation", "Consultation")
                        .WithMany("Patients")
                        .HasForeignKey("ConsultationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultation");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.PatientCategory", b =>
                {
                    b.HasOne("Programare_Pacienti.Models.Category", "Category")
                        .WithMany("PatientCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Programare_Pacienti.Models.Patient", "Patient")
                        .WithMany("PatientCategories")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.Category", b =>
                {
                    b.Navigation("PatientCategories");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.Consultation", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("Programare_Pacienti.Models.Patient", b =>
                {
                    b.Navigation("PatientCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
